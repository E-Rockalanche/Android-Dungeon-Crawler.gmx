<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_rogue_stand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create

//sprites
sprite_stand = -1;
sprite_walk = -1;
sprite_attack = -1;
sprite_die = -1;
sprite_sleep = -1;
loop_sprite = true;
image_speed = 0;
//Must use 'img_index' because image_index is reset when changing sprites
img_index = 0;
img_xscale = choose(-1, 1);
draw_x = 0;
draw_y = 0;


//tile size
size = 1;


//position
cell = -1;
i = 0;
j = 0;
old_i = 0;
old_j = 0;


//states
state = ENTITY_STATE.DORMANT;//default state for enemies
action = ENTITY_ACTION.WAIT;
alliance = ALLIANCE.EVIL;//default alliance for enemies


//item actions
can_pick_up = false;
//allows entities to use/throw/drop/equip/etc
can_use_items = false;


//turn timer
turn_timer = 0;


//pathfinding
path_stack = ds_stack_create();
entity_blocking_path = -1;
current_direction = 0;
for(var n = TILE.LENGTH-1; n &gt;= 0; n--){
    permissions[n] = false;
    }


//inventory
inventory = InventoryCreate();
gold = 0;
//equipment
weapon = -1;
armour = -1;
ring1 = -1;
ring2 = -1;


//AI
//goal_stack = ds_stack_create();
goals = 0;//bit flags
goal_list = ds_priority_create();
morale = INT_MAX;
guard_position = -1;
target = -1;
can_see_target = false;
target_last_known_cell = -1;


//player view
in_view = false;
was_in_view = false;


//enemy is hidden until revealing self (like fish)
alert_player_on_sight = true;


//status effects, etc
for(var n = STATUS.LENGTH-1; n &gt;= 0; n--){//have multiple status effects or just one?
    status_effect[n] = 0;
    }
//bit flags
abilities = 0;
resistances = 0;
immunities = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stats

//base stats
strength = 10;//heavy weapon damage, carry weight, health?
agility = 10;//movement speed, dodge chance
perception = 10;//detect hidden objects
intelligence = 10;//magic, memorize magic scrolls
dexterity = 10;//light weapon damage, stealth (reduced by armour weight)
constitution = 10;//health, resistances?

//derived stats
max_hp = 0;
hp = max_hp;
hp_regen = 0;

max_mp = 0;
mp = 0;
mp_regen = 0;

defense = 0;//natural defense
move_speed = 1;//unencumbered
attack_speed = 1;//unarmed
accuracy = 0;
dodge = 0;
throw_distance = 0;
combo = 0;
detection = 0;
stealth = 0;

//other stats
fatigue = 0;//number of rounds entity has been awake
stomach_size = 0;
hunger = 0;
//starving: hunger less than 0
//bloated: hunger over stomach size (chance to vomit)
metabolism = 0;//rate at which hunger decreases

//AI stats (not used by player)
morale = 0;//confidence of entity
adrenaline = 0;//counters falling asleep
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alarms

action_alarm = -1;
death_alarm = -1;
animation_alarm = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -100 - (j + size);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alarms

if (death_alarm &gt;= 0){
    death_alarm -= delta;
    if (death_alarm &lt;= 0){
        EntityDestroy(id);
        }
    }

if (action_alarm &gt;= 0){
    action_alarm -= delta;
    if (action_alarm &lt;= 0){
        scr_entity_action();
        }
    }
    
/*
if (animation_alarm &gt;= 0){
    animation_alarm -= delta;
    if (animation_alarm &lt;= 0){
        //stop animation
        }
    }
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//iterate image index

var sprite_length = sprite_get_number(sprite_index);

img_index += image_speed*delta;

if loop_sprite{
    img_index = img_index mod sprite_length;
    }
else if (img_index &gt; sprite_length-1) {
    img_index = sprite_length-1;
    image_speed = 0;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw self
DrawEntity(id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
