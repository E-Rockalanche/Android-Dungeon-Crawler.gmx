enum TILE{
    
    //non-passable
    WALL,
    WOOD,
    
    //regular terrain
    FLOOR,
    GRASS,
    TALL_GRASS,
    RUBBLE,
    
    BRIDGE,
    
    //doors
    DOOR_CLOSED,
    DOOR_OPEN,
    DOOR_LOCKED,
    DOOR_HIDDEN,
    
    //stairs
    STAIRS_UP,
    STAIRS_DOWN,
    
    ERROR,
    BOOKSHELF,
    STATUE,
    
    //lakes
    WATER,
    LAVA,
    PIT,
    
    
    EXIT,
    //ERROR,
    WALL_DECAL,
    
    LENGTH,
    }
globalvar TILE_IS_SOLID, TILE_BLOCKS_DIAGONAL, TILE_IS_GROUND, TILE_IS_LAKE, TILE_IS_STAIRS, TILE_IS_DOOR, LAKE_STITCHES_TO_TILE, TILE_OBSTRUCTS_GAS,
    TILE_IS_FLAMABLE, TILE_OBSTRUCTS_VIEW;
TILE_BLOCKS_DIAGONAL = (BL(TILE.WALL) | BL(TILE.WOOD) | BL(TILE.BOOKSHELF) | BL(TILE.WALL_DECAL));
TILE_IS_SOLID = (BL(TILE.WALL) | BL(TILE.WOOD) | BL(TILE.BOOKSHELF) | BL(TILE.WALL_DECAL) | BL(TILE.STATUE));
TILE_IS_GROUND = (BL(TILE.FLOOR) | BL(TILE.GRASS) | BL(TILE.TALL_GRASS) | BL(TILE.RUBBLE) | BL(TILE.STAIRS_UP) | BL(TILE.STAIRS_DOWN));
TILE_IS_LAKE = (BL(TILE.WATER) | BL(TILE.LAVA) | BL(TILE.PIT));
LAKE_STITCHES_TO_TILE = (BL(TILE.WATER) | BL(TILE.LAVA) | BL(TILE.PIT) | BL(TILE.WALL) | BL(TILE.BRIDGE) | BL(TILE.WALL_DECAL));
TILE_IS_STAIRS = (BL(TILE.STAIRS_UP) | BL(TILE.STAIRS_DOWN));
TILE_IS_DOOR = (BL(TILE.DOOR_CLOSED) | BL(TILE.DOOR_OPEN) | BL(TILE.DOOR_LOCKED) | BL(TILE.DOOR_HIDDEN));
TILE_OBSTRUCTS_GAS = (BL(TILE.DOOR_CLOSED) | BL(TILE.DOOR_HIDDEN) | BL(TILE.DOOR_LOCKED) | BL(TILE.RUBBLE) | BL(TILE.WALL) | BL(TILE.BOOKSHELF)
    | BL(TILE.WALL_DECAL));
TILE_IS_FLAMABLE = (BL(TILE.GRASS) | BL(TILE.TALL_GRASS) | BL(TILE.WOOD) | BL(TILE.DOOR_CLOSED) | BL(TILE.BOOKSHELF));
TILE_OBSTRUCTS_VIEW = (BL(TILE.WALL) | BL(TILE.WOOD) | BL(TILE.BOOKSHELF) | BL(TILE.WALL_DECAL) | BL(TILE.STATUE) | BL(TILE.DOOR_HIDDEN)
    | BL(TILE.DOOR_LOCKED) | BL(TILE.DOOR_CLOSED) | BL(TILE.TALL_GRASS));

enum GAS{
    NONE,
    TOXIC,
    PARALYTIC,
    CONFUSION,
    HEALING,
    
    LENGTH,
    }
globalvar gas_colour;
gas_colour[GAS.HEALING] = c_red;
gas_colour[GAS.PARALYTIC] = c_yellow;
gas_colour[GAS.TOXIC] = c_green;
gas_colour[GAS.CONFUSION] = c_purple;

enum ROOM{
    TYPE,
    
    LEFT,
    TOP,
    WIDTH,
    HEIGHT,
    
    CENTER,
    
    TREASURE_ROOM,
    LOCK,
    KEY,
    
    DOORS,//list
    TREE,
    LINKS,//list
    
    FUN_PERCENT,
    
    LENGTH,
    }
    
enum ROOM_TYPE{
    NONE,
    SQUARE,
    CAVE,
    CIRCLE,
    
    LENGTH,
    }
    
enum DIJKSTRA{
    TO_HALLWAY,
    TO_ROOM,
    TO_WATER,
    TO_SHORE,
    TO_START,
    TO_EXIT,
    
    LENGTH,
    }
